grade.txt
M.Tansley 05/99 48311 Green   8  40 44
J.Lulu    06/09 48317 Green   9  24 26
P.Bunny   02/99 48    Yellow  12 35 28
J.Troll   07/99 4842  Brown-3 12 26 26
L.Tansley 05/99 4712  Brown-2 12 30 28
此文本文件有7个域，即（1）名字、（2）升段日期、（3）学生序号、（4）腰带级别、（5）
年龄、（6）目前比赛积分、（7）比赛最高分。

1.保存输出
awk '{print $0}' grade.txt > wow
2.使用tee命令
awk '{print $0}' grade.txt | tee wow
3.使用标准输入
belts.awk < grade.txt 
4.打印单独记录
awk '{print $1,$4}' grade.txt
5.打印报告头
awk 'BEGIN {print "Name  Belt\n-----"} {print $1"\t"$4}' grade.txt
6.打印消息尾
awk 'BEGIN {print "Name\n-----"} {print $1} END {"end-of-report"}' grade.txt
7.键盘输入
awk 'BEGIN {print "Name  Belt\n-----"} {print $1"\t"$4}'
8.匹配
awk '{if($4~/Brown/) print $0}' grade.txt   
awk '$4~/Brown/' grade.txt  
9.精确匹配
awk '$3=="48" {print $0}' grade.txt
10.不匹配
awk '$0 !~ /Brown/' grade.txt
11.设置大小写
awk '/[Gg]reen/' grade.txt
12任意字符
awk '$1 ~/^...a/' grade.txt
13.或关系匹配
awk '$0~/(Yellow|Brown)/' grade.txt
14.行首匹配
awk '/^48/' input-file
15.AND
awk '{if ($1=="P.Bunny" && $4=="yellow") print $0}' grade.txt
16.OR
awk '{if ($1=="P.Bunny" || $4=="yellow") print $0}' grade.txt
17.显示记录数NR、显示域个数NF
awk '{print NF,NR,$0}' grade.txt
18.显示文件名
echo "/usr/local/etc/rc.sybase" | awk -F/ '{print $NF}'
19.设置输入域到变量名
awk '{name=$1;blet=$4; if(name=="Brown") print name"is the"blet}'
20.修改文本域
awk '{if($1=="xxxx") ($1="ooo") ; print $1}' grade.txt
21.只显示修改域
awk '{if($1=="xxxx") {$1="ooo" ; print $1}}' grade.txt
22.创建新的输出区
awk '{if($6<$7) {$8=$6+$7; print $8}}' grade.txt
23.增加列值
awk '{(tot+=$6)}; END{print "Club total point is" tot}' grade.txt
24.gsub
awk 'gsub(/xxx/,/xx/) {print $0}' grade.txt
25.index
awk 'BEGIN {print index("Bunny","ny")}' grade.txt
26.length
awk '{print length($1)}' grade.txt
27.match
awk 'BEGIN {print match("ascd",/d/)}'
28.split
awk 'BEGIN {print split("123#456#678",myarray,"#")}'
29.sub
awk '{sub(/26/,"29",$0)' grade.txt
30.substr
awk '$1=="L.Tansley" {print substr($1,1,5)}' grade.txt
31.awk标准输出
awk {printf "%-15s %s\n",$1,$3}' grade.txt
32.FS变量
awk -F: 'awk {print $0}' input-file




1.保存输出

2.使用tee命令

3.使用标准输入

4.打印单独记录

5.打印报告头

6.打印消息尾

7.键盘输入

8.匹配
  
 
9.精确匹配

10.不匹配

11.设置大小写

12任意字符

13.或关系匹配

14.行首匹配

15.AND

16.OR

17.显示记录数NR、显示域个数NF

18.显示文件名

19.设置输入域到变量名

20.修改文本域

21.只显示修改域

22.创建新的输出区

23.增加列值

24.gsub

25.index

26.length

27.match

28.split

29.sub

30.substr

31.awk标准输出

32.FS变量


